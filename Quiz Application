import tkinter as tk
import random
import time

# Question Bank (List of dictionaries)
questions = [
    {"question": "What is the capital of France?", "options": ["Paris", "London", "Rome", "Berlin"], "answer": "Paris"},
    {"question": "Which planet is known as the Red Planet?", "options": ["Earth", "Mars", "Jupiter", "Saturn"], "answer": "Mars"},
    {"question": "Who wrote 'Romeo and Juliet'?", "options": ["Shakespeare", "Dickens", "Austen", "Hemingway"], "answer": "Shakespeare"},
    {"question": "What is 5 + 3?", "options": ["5", "8", "10", "7"], "answer": "8"},
    {"question": "What is the largest ocean?", "options": ["Atlantic", "Indian", "Arctic", "Pacific"], "answer": "Pacific"},
]

# Global Variables
current_question = 0
score = 0
timer = 30  # seconds for each question
timer_running = False
selected_answer = ""

# Function to start the quiz
def start_quiz():
    global current_question, score, timer
    score = 0
    current_question = 0
    timer = 30
    score_label.config(text=f"Score: {score}")
    next_question()

# Function to pause the quiz
def pause_quiz():
    global timer_running
    timer_running = False
    start_button.config(state="normal")
    pause_button.config(state="disabled")
    restart_button.config(state="normal")

# Function to restart the quiz
def restart_quiz():
    global timer_running
    timer_running = False
    start_quiz()

# Timer function to count down
def countdown():
    global timer
    if timer > 0:
        timer -= 1
        timer_label.config(text=f"Time Remaining: {timer}s")
        if timer_running:
            root.after(1000, countdown)
    else:
        validate_answer()

# Function to display the next question
def next_question():
    global current_question, timer_running
    if current_question < len(questions):
        question = questions[current_question]
        question_label.config(text=question["question"])
        for i, option in enumerate(question["options"]):
            option_buttons[i].config(text=option)
        timer_label.config(text=f"Time Remaining: {timer}s")
        current_question += 1
        timer_running = True
        countdown()
    else:
        end_quiz()

# Function to validate the answer
def validate_answer():
    global score
    if selected_answer != "":
        correct_answer = questions[current_question - 1]["answer"]
        if selected_answer == correct_answer:
            score += 1
        score_label.config(text=f"Score: {score}")
        next_question()

# Function to handle the option selection
def select_answer(answer):
    global selected_answer
    selected_answer = answer

# Function to end the quiz and display score
def end_quiz():
    global timer_running
    timer_running = False
    result_label.config(text=f"Quiz Over! Your final score is: {score}")

# Creating the Tkinter window
root = tk.Tk()
root.title("Quiz Application")

# Labels and buttons
question_label = tk.Label(root, text="", font=("Arial", 16), width=50, height=2)
question_label.pack()

timer_label = tk.Label(root, text="Time Remaining: 30s", font=("Arial", 12))
timer_label.pack()

score_label = tk.Label(root, text="Score: 0", font=("Arial", 12))
score_label.pack()

# Radio buttons for options
option_buttons = []
for i in range(4):
    btn = tk.Button(root, text="", font=("Arial", 14), width=50, height=2, command=lambda option=questions[i]["options"]: select_answer(option))
    btn.pack(anchor="w")
    option_buttons.append(btn)

# Control buttons
start_button = tk.Button(root, text="Start Quiz", font=("Arial", 14), command=start_quiz)
start_button.pack(pady=10)

pause_button = tk.Button(root, text="Pause", font=("Arial", 14), state="disabled", command=pause_quiz)
pause_button.pack()

restart_button = tk.Button(root, text="Restart Quiz", font=("Arial", 14), command=restart_quiz)
restart_button.pack(pady=10)

result_label = tk.Label(root, text="", font=("Arial", 16))
result_label.pack(pady=10)

# Run the Tkinter event loop
root.mainloop()

